public ActionResult GetRescheduleInfo() { RescheduleDetailsViewModel vm = new RescheduleDetailsViewModel(); var reasons = _reasonsService.GetReasons(); vm.RequestedByList = _rescheduleReasonService.MapRescheduleRequestedBy(reasons.RequesterList); vm.RescheduleReasonList = reasons.RescheduleReasonList.OrderBy(e => e.RescheduleReasonName); vm.CountryList = _dropdownService.GetCountries(); vm.StatesList = _dropdownService.GetStates(); return PartialView("~/Views/Appointment/RescheduleAppointment.cshtml", vm); } for this partial view RescheduleDetailsViewModel I need to update the property List<Weather events> from this [HttpPost] public ActionResult GetWeatherEvents([FromBody] WeatherAlertsSearch weatherAlertsSearch) { try { var weatherEvents = _weatherAlertService.GetWeatherEvents(weatherAlertsSearch); return Ok(weatherEvents); } catch (Exception ex) { return BadRequest(new { error = "Failed to fetch weather events", details = ex.Message }); } } but this GetWeatherEvents call happens after the GetRescheduleInfo is completed ..it is done from this AJax call $(document).ready(function () { $("#ddlreschApptState").next(".btn-group").find("input").on("click", function () { triggerWeatherEventsCheck(); // Trigger the check when a state is selected }); $("#ddlreschApptCountry").on("change", function () { triggerWeatherEventsCheck(); // Trigger the check when the country is changed }); function triggerWeatherEventsCheck() { debugger; setTimeout(function () { var selectedStates = []; $("#ddlreschApptState").next(".btn-group").find("input:checked").each(function () { selectedStates.push($(this).val()); }); var selectedCountries = $("#ddlreschApptCountry").val(); console.log("Updated Selected States:", selectedStates); console.log("Selected Countries:", selectedCountries); if (selectedCountries) { if (selectedCountries.includes("USA") && selectedStates.length === 0) { console.warn("State selection required when USA is selected."); return; // Stop execution when USA is chosen without a state } var data = { Country: selectedCountries, State: selectedStates.length > 0 ? selectedStates : null }; $.ajax({ url: "/RescheduleReason/GetWeatherEvents", type: "POST", data: JSON.stringify(data), contentType: "application/json; charset=utf-8", dataType: "json", processData: false, success: function (response) { console.log("Weather Events Received:", response); }, error: function (xhr, status, error) { console.error("Error fetching weather events:", error); } }); } }, 100); } }); I want to update the model VM separately not in GetRescheduleInfo
