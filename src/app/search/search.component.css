 public ActionResult GetAppointmentInfo(int claimantId, int caseId)
 {
     AppointmentsViewModel vm = new AppointmentsViewModel();
     CancelReschWeatherAlertViewModel crm = new CancelReschWeatherAlertViewModel();
     List<Dropdown> pronounDropdwnList = new List<Dropdown>();
     List<Dropdown> pregnantDropdownList = new List<Dropdown>();
     var caseDetails = _caseDetailsService.GetCaseDetails(claimantId, caseId);
     vm.AccountDetails = caseDetails.Account;
     var orderedExams = _examBusinessService.ReorderExams(caseDetails.Exams);
     vm.Exams = orderedExams;
     vm.AssignedToList = _dropdownConfigurations.AssignedToList;
     var summary = _examBusinessService.SetExamStatus(orderedExams);
     vm.TotalAppointments = summary.TotalCount;
     vm.CompletedAppointments = summary.CompletedCount;
     vm.AccountDetails.AccountId = vm.AccountDetails.ClaimantId == "0" ? "" : $"{vm.AccountDetails.ClaimantId}.{vm.AccountDetails.CaseId}";
     vm.ExamineeDetails = caseDetails.ExamineeDetails.ToExamineeViewModel();
     vm.ExamineeDetails.ADASpecialAccomodations = _caseDetailsService.GetADASpecialAccomodations(claimantId, caseId);
     crm.Country = new List<string> { caseDetails.ExamineeDetails.Country };
     crm.State = new List<string> { caseDetails.ExamineeDetails.State};
     TempData["Country"] = JsonConvert.SerializeObject(crm.Country);
     TempData["State"] = JsonConvert.SerializeObject(crm.State);
      
     pronounDropdwnList.Add(new Dropdown() { Key = "S", Value = "-Select-" });
     pronounDropdwnList.AddRange(_dropdownService.GetDropdownData("PRONOUN_PREF"));

     if (caseDetails.Account.IsPronounComplianceEnabled)
     {
         pronounDropdwnList = pronounDropdwnList.Where(d => d.Value == "He/Him" || d.Value == "She/Her").ToList();
     }
     vm.PronounList = pronounDropdwnList;
     pregnantDropdownList.Add(new Dropdown { Key = "Y", Value = "Yes" });
     pregnantDropdownList.Add(new Dropdown { Key = "N", Value = "No" });
     if (caseDetails.Account.IsUnknownPregnantEnabled)
     {
         pregnantDropdownList.Add(new Dropdown { Key = "U", Value = "Unknown" });
     }
     vm.PregnantOptions = pregnantDropdownList;

     return View("~/Views/Appointment/ScheduleAppointment.cshtml", vm);
 }

///


  public ActionResult GetRescheduleInfo()
  {
      RescheduleDetailsViewModel vm = new RescheduleDetailsViewModel();
      var reasons = _reasonsService.GetReasons();
      vm.RequestedByList = _rescheduleReasonService.MapRescheduleRequestedBy(reasons.RequesterList);
      vm.RescheduleReasonList = reasons.RescheduleReasonList.OrderBy(e => e.RescheduleReasonName);

      CancelReschWeatherAlertViewModel crm = new CancelReschWeatherAlertViewModel();
      crm.CountryList = _dropdownService.GetCountries();
      crm.StatesList = _dropdownService.GetStates();
      var country = TempData.Peek("Country") != null
                      ? JsonConvert.DeserializeObject<List<string>>(TempData.Peek("Country").ToString())
                    : new List<string>();  

      var state = TempData.Peek("State") != null
          ? JsonConvert.DeserializeObject<List<string>>(TempData.Peek("State").ToString())
          : new List<string>();

      vm.WeatherEventVM = crm;
   
      return PartialView("~/Views/Appointment/RescheduleAppointment.cshtml", vm);
  }
